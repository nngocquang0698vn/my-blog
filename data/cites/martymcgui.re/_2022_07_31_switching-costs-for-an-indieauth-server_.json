{
  "type" : [ "h-entry" ],
  "properties" : {
    "name" : [ "Switching costs for an IndieAuth server" ],
    "category" : [ "site-update", "IndieAuth" ],
    "url" : [ "https://martymcgui.re/2022/07/31/switching-costs-for-an-indieauth-server/" ],
    "published" : [ "2022-07-31T14:32:34-0400" ],
    "content" : [ {
      "html" : "<p>One of the things I love about building with <a href=\"https://indieweb.org/Category:building-blocks\">IndieWeb building blocks</a> is that (sometimes through more work than anticipated) you can swap out pieces of your site without (much) disruption because the seams between building blocks are well specified.</p>\n\n<p>So, this is me documenting how I replaced my <a href=\"https://indieauth.spec.indieweb.org/\">IndieAuth</a> setup to stop leaning on <a href=\"https://aaronparecki.com/\">Aaron&#x2019;s</a> <a href=\"https://indieauth.com/\">IndieAuth.com</a> (which has been on the verge of retiring any day now for some years).</p>\n\n<p>Please excuse this long and rambling post. Feel free to skip around!</p>\n\n<!-- put a ToC here! -->\n\n<h2 id=\"what-is-indieauth\">What is IndieAuth?</h2>\n\n<p>At a high-level, IndieAuth is a way to sign in using your website as an identity.</p>\n\n<p>Without digging too deeply into the plumbing, you start by updating your website&#x2019;s homepage with some extra header info that says &#x201C;my IndieAuth service is over there&#x201D;. From there, you can sign into services that support IndieAuth (like the <a href=\"https://indieauth.org/\">IndieWeb wiki</a>, the social feed reader service <a href=\"https://aperture.p3k.io/\">Aperture</a>, and more. And you can use your IndieAuth server to protect your own services, such as a <a href=\"https://indieweb.org/Micropub\">Micropub server</a> that can create new posts on your site.</p>\n\n<h2 id=\"why-switch\">Why switch?</h2>\n\n<p>I&#x2019;ve been using indieauth.com as my IndieAuth setup since late 2016 because it was easy to set up, because it uses something called <a href=\"https://indieweb.org/RelMeAuth\">RelMeAuth</a> to let me sign in using services I already trust (like GitHub).</p>\n\n<p>However, indieauth.com has been growing stale as the IndieAuth spec has evolved. indieauth.com&#x2019;s maintainer has been <a href=\"https://chat.indieweb.org/dev/2017-12-17#t1513485617181300\">discussing replacing it since at least 2017</a>.</p>\n\n<p>The inciting incident for my switch was looking at <a href=\"https://owncast.online/\">OwnCast</a> - a self-hostable video streaming service with attached chatroom. OwnCast&#x2019;s chat allows using IndieAuth to sign in, which sounded great to me, but OwnCast&#x2019;s implementation wasn&#x2019;t expecting indieauth.com&#x2019;s old-style response format.</p>\n\n<h3 id=\"why-set-up-my-own\">Why set up my own?</h3>\n\n<p>There are <a href=\"https://indieweb.org/IndieAuth#Server_Implementations\">a bunch of IndieAuth server implementations listed on the IndieWeb wiki</a>. However: simplest of them (selfauth + mintoken) are now out of date with the spec and haven&#x2019;t been replaced, yet. Others tend to be built into other CMSes like WordPress. A couple of standalone servers exist but are in languages I am not comfortable working in (hello Rust and Go) or have deployment requirements I wasn&#x2019;t thrilled about supporting (hello Rails).</p>\n\n<p>I found <a href=\"https://github.com/taproot/indieauth\">Taproot/IndieAuth</a> on this page and that looked promising - a PHP library intended to be deployed within a fairly standard PHP web app style (&#x201C;any PSR-7 compatible app&#x201D;).</p>\n\n<p>I knew this would be some work but it sounded promising and so I began the week-ish long process of actually writing and deploying that &#x201C;PSR-7 compatible app&#x201D; built on taproot/indieauth.</p>\n\n<h2 id=\"tl-dr-say-hello-to-belding\">tl;dr say hello to Belding</h2>\n\n<p><a href=\"https://git.schmarty.net/schmarty/belding\">Belding</a> is an &#x201C;PSR-7 compatible&#x201D; PHP web app that provides a standalone IndieAuth endpoint for a single user with a simple password form for authentication.</p>\n\n<p>I would love to go into the process and pitfalls of putting it together, but instead I&#x2019;ll link to the <a href=\"https://git.schmarty.net/schmarty/belding#user-content-belding\">README</a> where you can learn more about how it works, how to use it, its limitations, etc.</p>\n\n<h2 id=\"switching-costs-for-an-indieauth-server\">Switching costs for an IndieAuth server</h2>\n\n<h3 id=\"1-tell-the-world\">1. Tell the World</h3>\n\n<p>First up, you&#x2019;ll need to update the headers on your site. I switched my <code>authorization_endpoint</code> and <code>token_endpoint</code> to my new server from indieauth.com. Since I&#x2019;m updating to support the latest spec, I also added the <code>indieauth-metadata</code> header (which should eventually replace the other two).</p>\n\n<p>Now that your site is advertising the new IndieAuth server, you will likely experience logouts or weird access denied reponses everywhere that your site has been used with IndieAuth.</p>\n\n<h3 id=\"2-tell-your-own-services\">2. Tell your own services</h3>\n\n<p>I needed to configure my own &#x201C;relying apps&#x201D; so they know to talk to the new server when checking that a request is allowed. This list thankfully wasn&#x2019;t too long.</p>\n\n<ul>\n<li><a href=\"https://github.com/martymcguire/micropub-1\">My Micropub server</a></li>\n<li><a href=\"https://github.com/martymcguire/spano\">My Micropub media server</a></li>\n</ul>\n\n<p>Beyond the effort of getting my server working as an indieauth.com replacement, I also took steps to try and support the latest in the IndieAuth spec. That meant updating these micropub servers to use the new &#x201C;token introspection&#x201D; feature which has some tighter security requirements.</p>\n\n<p>(<em><strong>Note:</strong> I initially made the same change for my self-hosted copy of Aperture, but found it would be too many changes for me to take on at the moment. Instead, I updated by IndieAuth server to allow the older and less secure token verification method used by Aperture.</em>)</p>\n\n<h3 id=\"3-sign-in-to-all-the-things-again-o\">3. Sign-in to all the things again \\o|</h3>\n\n<p>Once all my relying apps were all talking to the new IndieAuth server, it was time to re-sign-in to all the things:</p>\n\n<ul>\n<li><a href=\"https://indieweb.org/\">The IndieWeb wiki</a></li>\n<li><a href=\"https://indieweb.org/Monocle\">Monocle</a> social reader client</li>\n<li><a href=\"https://indieweb.org/Quill\">Quill</a> Micropub posting client</li>\n<li><a href=\"https://indieweb.org/OwnYourSwarm\">OwnYourSwarm</a></li>\n<li>iOS apps\n\n<ul>\n<li><a href=\"https://indieweb.org/Micro.blog\">micro.blog</a></li>\n<li><a href=\"https://indieweb.org/Indigenous_for_iOS\">Indigenous</a></li>\n</ul></li>\n<li>Manually issue new IndieAuth tokens for automation that uses them:\n\n<ul>\n<li>My <a href=\"https://martymcgui.re/2020/10/03/unsubscribing-from-youtubes-recommender/\">personal YouTube manager</a></li>\n<li>My command line tool for media uploads</li>\n<li>iOS shortcuts like the one I use to post <a href=\"https://martymcgui.re/tag/caturday/\">Caturday</a>.</li>\n</ul></li>\n</ul>\n\n<h2 id=\"takeaways\">Takeaways</h2>\n\n<p>There are <a href=\"https://git.schmarty.net/schmarty/belding#user-content-possible-future-work\">a lot of improvements I&#x2019;d like to make to Belding</a>, but in general I am happy that it seems to work and, outside of the time to develop the server itself, my website and the tools I use to manage it were only broken for about a day.</p>\n\n<p>I think it&#x2019;d also be really nice to wrap up Belding a bit so it&#x2019;s easy to configure and deploy on free-and-cheap platforms like <a href=\"https://fly.io/\">fly.io</a>. I believe it should be easier for folks to spin up and control their own IndieWeb building blocks where possible!</p>\n\n<p>It&#x2019;s also become clear to me that there are some user- and developer-experience holes around setting up relying apps. The auth requirements for token introspection, for example, means you need a way to manage access for each &#x201C;backend&#x201D; that you have that relies on IndieAuth to protect itself!</p>\n\n<p>Long story short (too late) I am finally able to sign into OwnCast server chat using my domain. &#x1F602;&#x1F605;</p>",
      "value" : "One of the things I love about building with IndieWeb building blocks is that (sometimes through more work than anticipated) you can swap out pieces of your site without (much) disruption because the seams between building blocks are well specified.\nSo, this is me documenting how I replaced my IndieAuth setup to stop leaning on Aaron’s IndieAuth.com (which has been on the verge of retiring any day now for some years).\nPlease excuse this long and rambling post. Feel free to skip around! What is IndieAuth?\nAt a high-level, IndieAuth is a way to sign in using your website as an identity.\nWithout digging too deeply into the plumbing, you start by updating your website’s homepage with some extra header info that says “my IndieAuth service is over there”. From there, you can sign into services that support IndieAuth (like the IndieWeb wiki, the social feed reader service Aperture, and more. And you can use your IndieAuth server to protect your own services, such as a Micropub server that can create new posts on your site. Why switch?\nI’ve been using indieauth.com as my IndieAuth setup since late 2016 because it was easy to set up, because it uses something called RelMeAuth to let me sign in using services I already trust (like GitHub).\nHowever, indieauth.com has been growing stale as the IndieAuth spec has evolved. indieauth.com’s maintainer has been discussing replacing it since at least 2017.\nThe inciting incident for my switch was looking at OwnCast - a self-hostable video streaming service with attached chatroom. OwnCast’s chat allows using IndieAuth to sign in, which sounded great to me, but OwnCast’s implementation wasn’t expecting indieauth.com’s old-style response format. Why set up my own?\nThere are a bunch of IndieAuth server implementations listed on the IndieWeb wiki. However: simplest of them (selfauth + mintoken) are now out of date with the spec and haven’t been replaced, yet. Others tend to be built into other CMSes like WordPress. A couple of standalone servers exist but are in languages I am not comfortable working in (hello Rust and Go) or have deployment requirements I wasn’t thrilled about supporting (hello Rails).\nI found Taproot/IndieAuth on this page and that looked promising - a PHP library intended to be deployed within a fairly standard PHP web app style (“any PSR-7 compatible app”).\nI knew this would be some work but it sounded promising and so I began the week-ish long process of actually writing and deploying that “PSR-7 compatible app” built on taproot/indieauth. tl;dr say hello to Belding\nBelding is an “PSR-7 compatible” PHP web app that provides a standalone IndieAuth endpoint for a single user with a simple password form for authentication.\nI would love to go into the process and pitfalls of putting it together, but instead I’ll link to the README where you can learn more about how it works, how to use it, its limitations, etc. Switching costs for an IndieAuth server 1. Tell the World\nFirst up, you’ll need to update the headers on your site. I switched my authorization_endpoint and token_endpoint to my new server from indieauth.com. Since I’m updating to support the latest spec, I also added the indieauth-metadata header (which should eventually replace the other two).\nNow that your site is advertising the new IndieAuth server, you will likely experience logouts or weird access denied reponses everywhere that your site has been used with IndieAuth. 2. Tell your own services\nI needed to configure my own “relying apps” so they know to talk to the new server when checking that a request is allowed. This list thankfully wasn’t too long. My Micropub server My Micropub media server\nBeyond the effort of getting my server working as an indieauth.com replacement, I also took steps to try and support the latest in the IndieAuth spec. That meant updating these micropub servers to use the new “token introspection” feature which has some tighter security requirements.\n(Note: I initially made the same change for my self-hosted copy of Aperture, but found it would be too many changes for me to take on at the moment. Instead, I updated by IndieAuth server to allow the older and less secure token verification method used by Aperture.) 3. Sign-in to all the things again \\o|\nOnce all my relying apps were all talking to the new IndieAuth server, it was time to re-sign-in to all the things: The IndieWeb wiki Monocle social reader client Quill Micropub posting client OwnYourSwarm iOS apps micro.blog Indigenous Manually issue new IndieAuth tokens for automation that uses them: My personal YouTube manager My command line tool for media uploads iOS shortcuts like the one I use to post Caturday. Takeaways\nThere are a lot of improvements I’d like to make to Belding, but in general I am happy that it seems to work and, outside of the time to develop the server itself, my website and the tools I use to manage it were only broken for about a day.\nI think it’d also be really nice to wrap up Belding a bit so it’s easy to configure and deploy on free-and-cheap platforms like fly.io. I believe it should be easier for folks to spin up and control their own IndieWeb building blocks where possible!\nIt’s also become clear to me that there are some user- and developer-experience holes around setting up relying apps. The auth requirements for token introspection, for example, means you need a way to manage access for each “backend” that you have that relies on IndieAuth to protect itself!\nLong story short (too late) I am finally able to sign into OwnCast server chat using my domain. 😂😅",
      "lang" : "en"
    } ],
    "author" : [ {
      "type" : [ "h-card" ],
      "properties" : {
        "name" : [ "Marty McGuire" ],
        "photo" : [ "https://martymcgui.re/images/logo.jpg" ],
        "url" : [ "https://martymcgui.re/" ]
      },
      "lang" : "en",
      "value" : "https://martymcgui.re/"
    } ],
    "like" : [ {
      "type" : [ "h-cite" ],
      "properties" : {
        "url" : [ "https://aaronparecki.com/2022/07/31/19/" ],
        "author" : [ {
          "type" : [ "h-card" ],
          "properties" : {
            "photo" : [ "https://res.cloudinary.com/schmarty/image/fetch/w_60,c_fill/https://webmention.io/avatar/aaronparecki.com/41061f9de825966faa22e9c42830e1d4a614a321213b4575b9488aa93f89817a.jpg" ],
            "name" : [ "Aaron Parecki" ]
          },
          "lang" : "en",
          "value" : "Aaron Parecki"
        } ]
      },
      "lang" : "en",
      "value" : "Aaron Parecki"
    }, {
      "type" : [ "h-cite" ],
      "properties" : {
        "url" : [ "https://herestomwiththeweather.com/social/2022/08/02/4466/" ],
        "author" : [ {
          "type" : [ "h-card" ],
          "properties" : {
            "photo" : [ "https://res.cloudinary.com/schmarty/image/fetch/w_60,c_fill/https://webmention.io/avatar/stark-moon-46.s3.amazonaws.com/6d754765cf77f8cee4e2a1323ea331e347c8f9fc4c7a2615237aed7486f4b820.jpg" ],
            "name" : [ "Tom" ]
          },
          "lang" : "en",
          "value" : "Tom"
        } ]
      },
      "lang" : "en",
      "value" : "Tom"
    } ]
  },
  "lang" : "en"
}
