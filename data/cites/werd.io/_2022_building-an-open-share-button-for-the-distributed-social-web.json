{
  "type" : [ "h-entry" ],
  "properties" : {
    "name" : [ "Building an open share button for the distributed social web" ],
    "in-reply-to" : [ "https://example.com/microshare&gt" ],
    "url" : [ "https://werd.io/2022/building-an-open-share-button-for-the-distributed-social-web" ],
    "published" : [ "2022-12-12T17:31:52+00:00" ],
    "content" : [ {
      "html" : "<p>Thinking through a “share with Mastodon” button that anyone could embed on a website. It’s a harder problem than a “share with Twitter” button, because there’s no one central host, and it would be ideal to avoid creating a central location to handle these requests. (Mastodon is decentralized, after all.)</p><p>As a bonus, I think it would work for indieweb or any other decentralized social platform. Maybe any social platform at all?</p><p>This would all be easier if <a href=\"https://en.wikipedia.org/wiki/Web_Intents\">web intents</a> had stuck around. Nonetheless, here’s how it might work. Let’s call it “microshare”, to sit alongside <a href=\"https://indieweb.org/Micropub\">micropub</a>:</p><ol><li>User clicks button on page.</li>\n<li>JS on the page detects whether the <code>web+social</code> URI scheme has been registered (I wish this was easier, but you can do this by making an asynchronous request and waiting for it to succeed or fail).</li>\n<li>If it has, great! Just forward the user to that URI.</li>\n<li>If not, ask the user what the domain of their social profile is.</li>\n<li>JS (or a back-end server process) goes and fetches that base URL and looks for either a <code>microshare</code> metatag or an HTTP header of the form <code>Link: &lt;<a href=\"https://example.com/microshare&amp;gt\" target=\"_blank\" rel=\"in-reply-to\" class=\"u-in-reply-to\">https://<wbr></wbr>example.com/<wbr></wbr>microshare&amp;gt</a>;; rel=\"microshare\"</code>. (Mastodon etc would need to support this endpoint and discovery of same.)</li>\n<li>If the endpoint exists, the browser opens a new tab and forwards the user to that URI with additional <code>text</code> and <code>url</code> URL string parameters populated with the name and the URL of the page being shared respectively.</li>\n<li>This new page contains a button to register the URI as the handler for the <code>web+social</code> URI scheme. It may also either prompt the user to log in, or, if they’re already logged in, share to that social platform, with the text and URL pre-filled into the form.</li>\n</ol><p>There are a few issues here that I’d like to iterate on: I wish URI scheme handling and detection was easier in a browser, for one. Secondly, there’s a potential phishing attack where a malicious website could show a fake login page and harvest someone’s login credentials.</p><p>Still, what I like about it is that it uses the web’s existing capabilities and doesn’t enforce a central domain handler (or even a domain as a shim). While it seems more convoluted than a standard href link (and it is), it can be achieved on publisher websites with just a few lines of JavaScript.</p><p>I’m sure I’ve missed something important, but I wanted to kick this off as a first step. Let me know what you think!</p>",
      "value" : "Thinking through a “share with Mastodon” button that anyone could embed on a website. It’s a harder problem than a “share with Twitter” button, because there’s no one central host, and it would be ideal to avoid creating a central location to handle these requests. (Mastodon is decentralized, after all.)\nAs a bonus, I think it would work for indieweb or any other decentralized social platform. Maybe any social platform at all?\nThis would all be easier if web intents had stuck around. Nonetheless, here’s how it might work. Let’s call it “microshare”, to sit alongside micropub:User clicks button on page. JS on the page detects whether the web+social URI scheme has been registered (I wish this was easier, but you can do this by making an asynchronous request and waiting for it to succeed or fail). If it has, great! Just forward the user to that URI. If not, ask the user what the domain of their social profile is. JS (or a back-end server process) goes and fetches that base URL and looks for either a microshare metatag or an HTTP header of the form Link: <https://example.com/microshare&gt;; rel=\"microshare\". (Mastodon etc would need to support this endpoint and discovery of same.) If the endpoint exists, the browser opens a new tab and forwards the user to that URI with additional text and url URL string parameters populated with the name and the URL of the page being shared respectively. This new page contains a button to register the URI as the handler for the web+social URI scheme. It may also either prompt the user to log in, or, if they’re already logged in, share to that social platform, with the text and URL pre-filled into the form.\nThere are a few issues here that I’d like to iterate on: I wish URI scheme handling and detection was easier in a browser, for one. Secondly, there’s a potential phishing attack where a malicious website could show a fake login page and harvest someone’s login credentials.\nStill, what I like about it is that it uses the web’s existing capabilities and doesn’t enforce a central domain handler (or even a domain as a shim). While it seems more convoluted than a standard href link (and it is), it can be achieved on publisher websites with just a few lines of JavaScript.\nI’m sure I’ve missed something important, but I wanted to kick this off as a first step. Let me know what you think!",
      "lang" : "en"
    } ],
    "author" : [ {
      "type" : [ "h-card" ],
      "properties" : {
        "name" : [ "Ben Werdmuller" ],
        "url" : [ "https://werd.io/profile/benwerd", "https://werd.io/profile/benwerd", "https://werd.io/profile/benwerd" ],
        "photo" : [ "https://werd.io/file/5d388c5fb16ea14aac640912/thumb.jpg" ]
      },
      "lang" : "en",
      "value" : "Ben Werdmuller"
    } ]
  },
  "lang" : "en"
}
