{
  "type" : [ "h-entry" ],
  "properties" : {
    "name" : [ "IndieAuth for ProcessWire Released" ],
    "category" : [ "indieweb", "processwire" ],
    "url" : [ "https://gregorlove.com/2022/07/indieauth-for-processwire-released/" ],
    "syndication" : [ "https://news.indieweb.org/en", "https://processwire.com/talk/topic/26220-module-indieauth-for-processwire/", "https://twitter.com/gRegorLove/status/1544096341986402304" ],
    "bridgy-omit-link" : [ "https://news.indieweb.org/en", "https://processwire.com/talk/topic/26220-module-indieauth-for-processwire/", "https://twitter.com/gRegorLove/status/1544096341986402304" ],
    "author" : [ "https://gregorlove.com/" ],
    "published" : [ "2022-07-04 15:18-0700" ],
    "content" : [ {
      "html" : "<p>IndieAuth lets you sign in to applications using your domain name and grant access to read/write to your site. This module adds IndieAuth support to your <a href=\"https://processwire.com/\">ProcessWire</a> site, enabling two main things:</p>\n\n<ol>\n\t<li>Authentication: When you visit a site like <a href=\"https://indielogin.com/\">indielogin.com</a> and enter your domain name, you will be taken to your ProcessWire admin area to sign in and approve the request. If you approve the request, you will be returned to the site and logged in as your domain name.</li>\n\t<li>Authorization: When you visit an application like <a href=\"https://quill.p3k.io/\">Quill</a>, it needs to also get your permission to post to your site. You will be taken to your ProcessWire admin area to sign in and approve the request/scopes that the app is requesting (create, update, delete, etc.). If you approve the request, you will be returned to the app, logged in as your domain name, and the app will have an access token for your site.</li>\n</ol>\n\n<h2 class=\"delta\" id=\"features\">Features</h2>\n\n<ul>\n\t<li>Browse the applications you have granted access tokens to. See when each one was granted, last used, and will expire.</li>\n\t<li>Revoke any application&#x2019;s access tokens</li>\n\t<li>Set the default expiration period for new access tokens. The initial default is 14 days.</li>\n\t<li>Automatically remove expired tokens</li>\n\t<li>During authorization, confirm and change the scopes granted to the application. For example, an app may request &#x201C;create&#x201D; and &#x201C;delete&#x201D; scopes, but you can grant only &#x201C;create.&#x201D;</li>\n\t<li>During authorization, you can also choose to grant an access token with no expiration</li>\n</ul>\n\n<h2 class=\"delta\" id=\"installation\">Installation from GitHub</h2>\n\n<div style=\"margin-bottom: 1.6rem; padding: 1rem; background: #fff3cd; color: #664d03; border: 1px solid #ffecb5;\">This module is currently pending approval to appear in the <a href=\"https://processwire.com/modules/\" style=\"color:#523e02; font-weight: 700;\">Directory of ProcessWire plugin modules</a>. Until it is approved, please follow the instructions on <a href=\"https://github.com/gregorlove/Processwire-IndieAuth\" style=\"color:#523e02; font-weight: 700;\">GitHub</a> to install. I will remove this notice once the module is in the directory.</div>\n\n<h2 class=\"delta\">Installation from Modules Directory</h2>\n\n<p>The recommended method is to use the ProcessWire admin area&#x2019;s module interface.</p>\n\n<ol>\n\t<li>Navigate to Modules &gt; New. In the <i>Module Class Name</i> field, enter <code>ProcessIndieAuth</code></li>\n\t<li>Copy the template files from the module&#x2019;s directory <code>/extras/templates</code> into your site&#x2019;s <code>/site/templates</code> directory.</li>\n\t<li>Verify that the plugin installed pages:\n\t<ul>\n\t\t<li>IndieAuth Metadata Endpoint</li>\n\t\t<li>Authorization Endpoint</li>\n\t\t<li>Token Endpoint</li>\n\t\t<li>Token Revocation Endpoint</li>\n\t\t<li>IndieAuth page under the admin&#x2019;s Access menu</li>\n\t</ul>\n\t</li>\n\t<li>Look up the user(s) that you want to allow to use IndieAuth and assign them the &#x201C;indieauth&#x201D; role</li>\n\t<li>Update your home page template to add the link elements inside the &lt;head&gt; element:<br>\n\t<code style=\"font-size: 1.6rem;\">&lt;?=$modules-&gt;get('ProcessIndieAuth')-&gt;getLinkElements();?&gt;</code></li>\n</ol>\n\n<p>This should result in three &lt;link&gt; elements in the source HTML:</p>\n\n<pre>\n<code style=\"font-size: 1.6rem;\">&lt;head&gt;\n    &lt;link rel=\"indieauth-metadata\" href=\"/indieauth-metadata-endpoint/\"&gt;\n    &lt;link rel=\"authorization_endpoint\" href=\"/authorization-endpoint/\"&gt;\n    &lt;link rel=\"token_endpoint\" href=\"/token-endpoint/\"&gt;\n&lt;/head&gt;</code></pre>\n\n<h2 class=\"delta\" id=\"signin\">Sign In</h2>\n\n<p>To test signing in with IndieAuth, visit <a href=\"https://indielogin.com\">indielogin.com</a> and enter your domain name. Follow the prompts to authenticate and you should end up back on indielogin.com with a success message.</p>\n\n<figure class=\"no-margin\"><img alt=\"screenshot\" class=\"screenshot util-max-full-width\" src=\"https://gregorlove.com/site/assets/files/6031/indieauth-for-processwire-authentication.1000x0-is.png\">\n<figcaption>\n<p class=\"small\">The authentication prompt when signing in with IndieAuth</p>\n</figcaption>\n</figure>\n\n<h2 class=\"delta\" id=\"authorize\">Sign In and Authorize</h2>\n\n<p>To authorize an application with IndieAuth, you site will first need a module that uses access tokens. I have a <a href=\"https://github.com/gregorlove/ProcessWire-Micropub\">Micropub for ProcessWire</a> module in development that does that. Micropub is a standard that lets you publish to your site using third-party clients. If you&#x2019;d like to try it out, follow the instructions on GitHub to install it.</p>\n\n<p>After installing, visit <a href=\"https://quill.p3k.io/\">Quill</a> and enter your domain name. Follow the prompts and note the additional fields for &#x201C;scope&#x201D; and &#x201C;expiration,&#x201D; since you are authorizing an application to interact with your site. After successfully authorizing, try to post a short note from Quill. Quill should redirect you to the new post if it was successful.</p>\n\n<p>For a list of other Micropub clients you can try, see <a href=\"https://indieweb.org/Micropub/Clients\">https://indieweb.org/Micropub/Clients</a>.</p>\n\n<figure class=\"no-margin\"><img alt=\"screenshot\" class=\"screenshot util-max-full-width\" src=\"https://gregorlove.com/site/assets/files/6031/indieauth-for-processwire-authorization.1000x0-is.png\">\n<figcaption>\n<p class=\"small\">The authorization prompt</p>\n</figcaption>\n</figure>\n\n<h2 class=\"delta\" id=\"admin\">Admin and Options</h2>\n\n<p>In the admin, you can see which applications you have granted access tokens to. You can see when each token was issued, last accessed, and its expiration. You can also manually revoke a token at any time. Navigate to: Access &gt; IndieAuth.</p>\n\n<figure class=\"no-margin\"><img alt=\"screenshot\" class=\"screenshot util-max-full-width\" src=\"https://gregorlove.com/site/assets/files/6031/indieauth-for-processwire-tokens.1000x0-is.png\">\n<figcaption>\n<p class=\"small\">The admin page displaying access tokens you have granted</p>\n</figcaption>\n</figure>\n\n<p>There are a couple options in the admin at: Modules &gt; Configure &gt; ProcessIndieAuth:</p>\n\n<ol>\n\t<li>Default access token lifetime (in seconds): This defaults to 14 days and is what appears in the authorization screenshot above.</li>\n\t<li>Automatically remove access tokens after expiration (enabled by default): When enabled, the site checks approximately every six hours and removes expired access tokens. Regardless of whether this option is enabled, the module will reject any application attempting to use an expired access token. Since access tokens cannot (currently) have their expiration extended, I recommend keeping this option enabled so the admin list stays tidy and current.</li>\n</ol>\n\n<p>Finally, this module writes some admin logs. Access those at: Setup &gt; Logs &gt; indieauth</p>\n\n<h2 class=\"delta\" id=\"more\">More About IndieAuth</h2>\n\n<p>If you&#x2019;re interested in more details about IndieAuth, I recommend the article &#x201C;<a href=\"https://aaronparecki.com/2018/07/07/7/oauth-for-the-open-web\">OAuth for the Open Web</a>&#x201D; by Aaron Parecki (or the <a href=\"https://youtu.be/EeCNlB7v08I\">video presentation</a>). If you are interested in implementing IndieAuth in your project, see the <a href=\"https://indieauth.spec.indieweb.org/\">IndieAuth specification</a>.</p>",
      "value" : "IndieAuth lets you sign in to applications using your domain name and grant access to read/write to your site. This module adds IndieAuth support to your ProcessWire site, enabling two main things: Authentication: When you visit a site like indielogin.com and enter your domain name, you will be taken to your ProcessWire admin area to sign in and approve the request. If you approve the request, you will be returned to the site and logged in as your domain name. Authorization: When you visit an application like Quill, it needs to also get your permission to post to your site. You will be taken to your ProcessWire admin area to sign in and approve the request/scopes that the app is requesting (create, update, delete, etc.). If you approve the request, you will be returned to the app, logged in as your domain name, and the app will have an access token for your site. Features Browse the applications you have granted access tokens to. See when each one was granted, last used, and will expire. Revoke any application’s access tokens Set the default expiration period for new access tokens. The initial default is 14 days. Automatically remove expired tokens During authorization, confirm and change the scopes granted to the application. For example, an app may request “create” and “delete” scopes, but you can grant only “create.” During authorization, you can also choose to grant an access token with no expiration Installation from GitHub This module is currently pending approval to appear in the Directory of ProcessWire plugin modules. Until it is approved, please follow the instructions on GitHub to install. I will remove this notice once the module is in the directory. Installation from Modules Directory\nThe recommended method is to use the ProcessWire admin area’s module interface. Navigate to Modules > New. In the Module Class Name field, enter ProcessIndieAuth Copy the template files from the module’s directory /extras/templates into your site’s /site/templates directory. Verify that the plugin installed pages: IndieAuth Metadata Endpoint Authorization Endpoint Token Endpoint Token Revocation Endpoint IndieAuth page under the admin’s Access menu Look up the user(s) that you want to allow to use IndieAuth and assign them the “indieauth” role Update your home page template to add the link elements inside the <head> element:\n<?=$modules->get('ProcessIndieAuth')->getLinkElements();?>\nThis should result in three <link> elements in the source HTML: <head> <link rel=\"indieauth-metadata\" href=\"/indieauth-metadata-endpoint/\"> <link rel=\"authorization_endpoint\" href=\"/authorization-endpoint/\"> <link rel=\"token_endpoint\" href=\"/token-endpoint/\"> </head> Sign In\nTo test signing in with IndieAuth, visit indielogin.com and enter your domain name. Follow the prompts to authenticate and you should end up back on indielogin.com with a success message. screenshot\nThe authentication prompt when signing in with IndieAuth Sign In and Authorize\nTo authorize an application with IndieAuth, you site will first need a module that uses access tokens. I have a Micropub for ProcessWire module in development that does that. Micropub is a standard that lets you publish to your site using third-party clients. If you’d like to try it out, follow the instructions on GitHub to install it.\nAfter installing, visit Quill and enter your domain name. Follow the prompts and note the additional fields for “scope” and “expiration,” since you are authorizing an application to interact with your site. After successfully authorizing, try to post a short note from Quill. Quill should redirect you to the new post if it was successful.\nFor a list of other Micropub clients you can try, see https://indieweb.org/Micropub/Clients. screenshot\nThe authorization prompt Admin and Options\nIn the admin, you can see which applications you have granted access tokens to. You can see when each token was issued, last accessed, and its expiration. You can also manually revoke a token at any time. Navigate to: Access > IndieAuth. screenshot\nThe admin page displaying access tokens you have granted\nThere are a couple options in the admin at: Modules > Configure > ProcessIndieAuth: Default access token lifetime (in seconds): This defaults to 14 days and is what appears in the authorization screenshot above. Automatically remove access tokens after expiration (enabled by default): When enabled, the site checks approximately every six hours and removes expired access tokens. Regardless of whether this option is enabled, the module will reject any application attempting to use an expired access token. Since access tokens cannot (currently) have their expiration extended, I recommend keeping this option enabled so the admin list stays tidy and current.\nFinally, this module writes some admin logs. Access those at: Setup > Logs > indieauth More About IndieAuth\nIf you’re interested in more details about IndieAuth, I recommend the article “OAuth for the Open Web” by Aaron Parecki (or the video presentation). If you are interested in implementing IndieAuth in your project, see the IndieAuth specification.",
      "lang" : "en"
    } ]
  },
  "lang" : "en"
}
