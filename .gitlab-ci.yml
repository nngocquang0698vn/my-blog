image: docker:19.03

variables:
  DOCKER_DRIVER: overlay
  HUGO_VERSION: 0.101.0

stages:
  - build
  - deploy

build_test_site:
  services:
    - docker:19.03-dind
  stage: build
  script:
    - docker build -f Dockerfile.branch .
    # }}}
  only:
    refs:
      - branches
    changes:
      - themes/*
  except:
    - main

theme_branch:
  image: alpine:latest
  stage: build
  script:
    - apk add --update git ruby
    - ruby .ci/theme-branch.rb
  only:
    - branches
  except:
    - main
# }}}

build:
  stage: build
  image:
    name: registry.gitlab.com/tanna.dev/jvt.me/hugo-base:$HUGO_VERSION
    entrypoint: ['']
  artifacts:
    expire_in: 30 minutes
    name: "$CI_COMMIT_REF_SLUG"
    paths:
      - public/
  interruptible: true
  script:
    - hugo --verbose --minify
  only:
    - main

deploy:
  stage: deploy
  image:
    name: registry.gitlab.com/tanna.dev/jvt.me/hugo-base:$HUGO_VERSION
    entrypoint: ['']
  resource_group: production
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    expire_in: 30 minutes
    paths:
      - public/
  variables:
    GIT_DEPTH: 1
  before_script:
    - >
      STS=($(aws sts assume-role-with-web-identity
      --role-arn ${HUGO_ROLE_ARN}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token $CI_JOB_JWT_V2
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text))
    - export AWS_ACCESS_KEY_ID="${STS[0]}"
    - export AWS_SECRET_ACCESS_KEY="${STS[1]}"
    - export AWS_SESSION_TOKEN="${STS[2]}"
  script:
    - hugo deploy --log --verbose --maxDeletes -1
  only:
    - main
